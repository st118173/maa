!function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery","./jquery.fileupload"],e):e("object"==typeof exports?require("jquery"):window.jQuery)}(function(e){"use strict";var t=e.blueimp.fileupload.prototype.options.add;e.widget("blueimp.fileupload",e.blueimp.fileupload,{options:{processQueue:[],add:function(i,n){var r=e(this);n.process(function(){return r.fileupload("process",n)}),t.call(this,i,n)}},processActions:{},_processFile:function(t,i){var n=this,r=e.Deferred().resolveWith(n,[t]),o=r.promise();return this._trigger("process",null,t),e.each(t.processQueue,function(t,r){var s=function(t){return i.errorThrown?e.Deferred().rejectWith(n,[i]).promise():n.processActions[r.action].call(n,t,r)};o=o.then(s,r.always&&s)}),o.done(function(){n._trigger("processdone",null,t),n._trigger("processalways",null,t)}).fail(function(){n._trigger("processfail",null,t),n._trigger("processalways",null,t)}),o},_transformProcessQueue:function(t){var i=[];e.each(t.processQueue,function(){var n={},r=this.action,o=this.prefix===!0?r:this.prefix;e.each(this,function(i,r){"string"===e.type(r)&&"@"===r.charAt(0)?n[i]=t[r.slice(1)||(o?o+i.charAt(0).toUpperCase()+i.slice(1):i)]:n[i]=r}),i.push(n)}),t.processQueue=i},processing:function(){return this._processing},process:function(t){var i=this,n=e.extend({},this.options,t);return n.processQueue&&n.processQueue.length&&(this._transformProcessQueue(n),0===this._processing&&this._trigger("processstart"),e.each(t.files,function(r){var o=r?e.extend({},n):n,s=function(){return t.errorThrown?e.Deferred().rejectWith(i,[t]).promise():i._processFile(o,t)};o.index=r,i._processing+=1,i._processingQueue=i._processingQueue.then(s,s).always(function(){i._processing-=1,0===i._processing&&i._trigger("processstop")})})),this._processingQueue},_create:function(){this._super(),this._processing=0,this._processingQueue=e.Deferred().resolveWith(this).promise()}})});