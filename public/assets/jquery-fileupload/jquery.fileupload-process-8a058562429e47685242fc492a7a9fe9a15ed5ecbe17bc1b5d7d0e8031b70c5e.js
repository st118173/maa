!function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery","./jquery.fileupload"],e):e("object"==typeof exports?require("jquery"):window.jQuery)}(function(e){"use strict";var t=e.blueimp.fileupload.prototype.options.add;e.widget("blueimp.fileupload",e.blueimp.fileupload,{options:{processQueue:[],add:function(n,i){var r=e(this);i.process(function(){return r.fileupload("process",i)}),t.call(this,n,i)}},processActions:{},_processFile:function(t,n){var i=this,r=e.Deferred().resolveWith(i,[t]),o=r.promise();return this._trigger("process",null,t),e.each(t.processQueue,function(t,r){var s=function(t){return n.errorThrown?e.Deferred().rejectWith(i,[n]).promise():i.processActions[r.action].call(i,t,r)};o=o.then(s,r.always&&s)}),o.done(function(){i._trigger("processdone",null,t),i._trigger("processalways",null,t)}).fail(function(){i._trigger("processfail",null,t),i._trigger("processalways",null,t)}),o},_transformProcessQueue:function(t){var n=[];e.each(t.processQueue,function(){var i={},r=this.action,o=this.prefix===!0?r:this.prefix;e.each(this,function(n,r){"string"===e.type(r)&&"@"===r.charAt(0)?i[n]=t[r.slice(1)||(o?o+n.charAt(0).toUpperCase()+n.slice(1):n)]:i[n]=r}),n.push(i)}),t.processQueue=n},processing:function(){return this._processing},process:function(t){var n=this,i=e.extend({},this.options,t);return i.processQueue&&i.processQueue.length&&(this._transformProcessQueue(i),0===this._processing&&this._trigger("processstart"),e.each(t.files,function(r){var o=r?e.extend({},i):i,s=function(){return t.errorThrown?e.Deferred().rejectWith(n,[t]).promise():n._processFile(o,t)};o.index=r,n._processing+=1,n._processingQueue=n._processingQueue.then(s,s).always(function(){n._processing-=1,0===n._processing&&n._trigger("processstop")})})),this._processingQueue},_create:function(){this._super(),this._processing=0,this._processingQueue=e.Deferred().resolveWith(this).promise()}})});